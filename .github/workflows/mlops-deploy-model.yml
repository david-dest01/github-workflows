name: MLOPS - Scoring Deployment

on:
  workflow_dispatch:
    inputs:
      client:
        required: true
        type: choice
        options:
          - all
          - cna
          - sedgwick
      image_tag:
        type: string
        required: true
      environment:
        required: true
        type: choice
        options:
          - all
          - development
          - staging
          - production
  workflow_call:
    inputs: 
      client:
        required: true
        type: string
      image_tag:
        required: true
        type: string                      
      environment:
        required: true
        type: string

env: 
  DEPLOY_TARGET_CLIENT_TARGET_ENV: |
    ${{ github.events.inputs.client != 'all' && github.events.inputs.environment != 'all' }}
  DEPLOY_TARGET_CLIENT_ALL_ENV: |
    ${{ github.events.inputs.client != 'all' && github.events.inputs.environment == 'all' }}
  DEPLOY_ALL_CLIENT_TARGET_ENV: |
    ${{ github.events.inputs.client == 'all' && github.events.inputs.environment != 'all' }}
  DEPLOY_ALL_CLIENT_ALL_ENV: |
    ${{ github.events.inputs.client == 'all' && github.events.inputs.environment == 'all' }}

jobs:

  deploy_conditions:
    runs-on: ubuntu-latest
    outputs:
      deploy-target-client-target-env: ${{ steps.deploy-target-client-target-env.outputs.value }}
      deploy-target-client-all-env: ${{ steps.deploy-target-client-all-env.outputs.value }}
      deploy-all-client-target-env: ${{ steps.deploy-all-client-target-env.outputs.value }}
      deploy-all-client-all-env: ${{ steps.deploy-all-client-all-env.outputs.value }}
    steps:
      - id: deploy-target-client-target-env
        run: |
          echo ::set-output name=value::${{ inputs.client != 'all' && inputs.environment != 'all' }}
      - id: deploy-target-client-all-env
        run: |
          echo ::set-output name=value::${{ inputs.client != 'all' && inputs.environment == 'all' }}
      - id: deploy-all-client-target-env
        run: |
          echo ::set-output name=value::${{ github.events.inputs.client == 'all' && github.events.inputs.environment != 'all' }}
      - id: deploy-all-client-all-env
        run: |
          echo ::set-output name=value::${{ inputs.client == 'all' && inputs.environment == 'all' }}

  DEPLOY_TARGET_CLIENT_TARGET_ENV:
    runs-on: ubuntu-latest
    needs: deploy_conditions
    if: needs.deploy_conditions.outputs.deploy-target-client-target-env == 'true'
    steps:
      - id: deploy-conditions
        run: |
          echo "in DEPLOY_TARGET_CLIENT_TARGET_ENV"

  DEPLOY_TARGET_CLIENT_ALL_ENV:
    runs-on: ubuntu-latest
    needs: deploy_conditions
    if: needs.deploy_conditions.outputs.deploy-target-client-all-env == 'true'
    steps:
      - id: deploy-conditions
        run: |
          echo "in DEPLOY_TARGET_CLIENT_ALL_ENV"     

  DEPLOY_ALL_CLIENT_TARGET_ENV:
    runs-on: ubuntu-latest
    needs: deploy_conditions
    if: needs.deploy_conditions.outputs.deploy-all-client-target-env == 'true'
    steps:
      - id: deploy-conditions
        run: |
          echo "in DEPLOY_ALL_CLIENT_TARGET_ENV"    

  DEPLOY_ALL_CLIENT_ALL_ENV:
    runs-on: ubuntu-latest
    needs: deploy_conditions
    if: needs.deploy_conditions.outputs.deploy-all-client-all-env == 'true'
    steps:
      - id: deploy-conditions
        run: |
          echo "in DEPLOY_ALL_CLIENT_ALL_ENV"                              
          

  # mlops_deploy_target_client_target_env:
  #   runs-on: ubuntu-latest
  #   if: ${{ github.env.DEPLOY_TARGET_CLIENT_TARGET_ENV }}
  #   environment: ${{ inputs.environment }}
  #   steps:
  #     # TODO: enter validate prior deployment step
  #     - uses: EvolutionIQ/devops/.github/actions/dagster-deploy-code-location@main
  #       env:
  #         GIT_BOT_SSH_KEY: ${{ secrets.GIT_BOT_SSH_KEY }}
  #       with:
  #         location_name: ${{ inputs.client }}-ml-wc-scoring
  #         platform: GCP
  #         country_code: US
  #         environment: ${{ inputs.environment }}
  #         image_tag: ${{ inputs.image_tag }}                      

  # mlops_deploy_all_client_target_env:
  #   runs-on: ubuntu-latest
  #   if: ${{ github.env.DEPLOY_ALL_CLIENT_TARGET_ENV }}
  #   environment: ${{ inputs.environment }}
  #   strategy:
  #     fail-fast: true
  #     max-parallel: 1
  #     matrix:
  #       client:
  #         - cna
  #         - sedgwick      
  #   steps:
  #     # TODO: enter validate prior deployment step
  #     - uses: EvolutionIQ/devops/.github/actions/dagster-deploy-code-location@main
  #       env:
  #         GIT_BOT_SSH_KEY: ${{ secrets.GIT_BOT_SSH_KEY }}
  #       with:
  #         location_name: ${{ matrix.client }}-ml-wc-scoring
  #         platform: GCP
  #         country_code: US
  #         environment: ${{ inputs.environment }}
  #         image_tag: ${{ inputs.image_tag }}  

  # mlops_deploy_all_development:
  #   runs-on: ubuntu-latest     
  #   if: ${{ github.env.DEPLOY_ALL_CLIENT_ALL_ENV }}
  #   environment: development
  #   strategy:
  #     fail-fast: true
  #     max-parallel: 1
  #     matrix:
  #       client:
  #         - cna
  #         - sedgwick
  #   steps:
  #     - uses: EvolutionIQ/devops/.github/actions/dagster-deploy-code-location@main
  #       env:
  #         GIT_BOT_SSH_KEY: ${{ secrets.GIT_BOT_SSH_KEY }}
  #       with:
  #         location_name: ${{ matrix.client }}-ml-wc-scoring
  #         platform: GCP
  #         country_code: US
  #         environment: development
  #         image_tag: ${{ inputs.image_tag }}    

  # mlops_deploy_all_staging:
  #   runs-on: ubuntu-latest     
  #   needs: 
  #     - mlops_deploy_all_development
  #   environment: staging
  #   strategy:
  #     fail-fast: true
  #     max-parallel: 1
  #     matrix:
  #       client:
  #         - cna
  #         - sedgwick
  #   steps:
  #     - run: echo "hello"
